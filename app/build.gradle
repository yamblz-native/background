apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply from: '../code_quality_tools/jacoco.gradle'
apply plugin: 'com.frogermcs.androiddevmetrics'
apply from: '../code_quality_tools/quality.gradle'
apply plugin: 'com.github.ben-manes.versions'

android {
    // Declared in dependencies.gradle in the root of the project.
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId 'ru.yandex.yamblz'
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.code // Notice that you may want to use BUILD_NUMBER from CI in real project with own CI.
        versionName versions.name

        // Make generated apks contain version name and code.
        archivesBaseName = "app-${versions.name}-${versions.code}"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        yamblz {
            storeFile file('keystore.jks')
            storePassword 'yamblz'
            keyAlias 'yamblz'
            keyPassword 'yamblz'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.yamblz
            applicationIdSuffix '.debug'

            // Enables code coverage with Jacoco only for instrumentation tests.
            // Coverage for JVM tests done by code_quality_tools/jacoco.gradle.
            testCoverageEnabled true
        }

        release {
            signingConfig signingConfigs.yamblz
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')

            // Enables code coverage with Jacoco only for instrumentation tests.
            // Coverage for JVM tests done by code_quality_tools/jacoco.gradle.
            testCoverageEnabled true
        }
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true // Fail early.

        disable 'GoogleAppIndexingWarning' // App does not have deep linking.
        disable 'InvalidPackage' // Okio references java.nio that does not presented in Android SDK.
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    // This allows us see tests execution progress in the output on the CI.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
    }
}

// Libraries declared in dependencies.gradle in the root of the project
dependencies {
    compile libraries.dagger
    apt libraries.daggerCompiler

    compile libraries.supportAnnotations
    compile libraries.supportAppCompat
    compile libraries.supportDesign
    compile libraries.supportRecyclerView
    compile libraries.supportCardView

    compile libraries.butterKnife
    apt libraries.butterKnifeCompiler

    compile libraries.timber

    // Developer tools (Developer Settings)
    compile libraries.stetho
    compile libraries.leakCanary
    compile libraries.tinyDancer
    compile libraries.lynx
    compile libraries.processPhoenix

    // okhttp
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    // RxJava
    compile 'io.reactivex:rxjava:1.1.8'

    // RxAndroid
    compile 'io.reactivex:rxandroid:1.2.1'

    // retrofit + stuff
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

    testCompile libraries.junit
    testCompile libraries.robolectric
    testCompile libraries.assertJ
    testCompile libraries.equalsVerifier
    testCompile libraries.mockitoCore
    testCompile libraries.devMetricsNoOp

    androidTestCompile libraries.supportTestRunner
    androidTestCompile libraries.supportTestRules
    androidTestCompile libraries.espressoCore
    androidTestCompile(libraries.espressoContrib) {
        // Causes IncompatibleClassChangeError. As alwaysâ€¦
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'
    }
    compile 'javax.annotation:javax.annotation-api:1.2'
}

configurations.all {
    resolutionStrategy {
        // Force our version of support-annotations, we have a conflict between app and androidTest dependency resolution.
        force libraries.supportAnnotations
    }
}

// Check if the build requires dex count
def withDexcount = project.hasProperty('withDexcount')
if (withDexcount) {
    apply plugin: 'com.getkeepsafe.dexcount'

    dexcount {
        format = 'list'
        includeFieldCount = true
        includeTotalMethodCount = true
        verbose = false
        maxTreeDepth = Integer.MAX_VALUE
    }
}
